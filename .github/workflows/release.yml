# SPDX-FileCopyrightText: Copyright (c) 2022-2024 trobonox <hello@trobo.dev>
#
# SPDX-License-Identifier: Apache-2.0

name: 'Release App'

on:
  push:
    branches:
      - release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-kanri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-20.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    outputs:
      upload_url: ${{ steps.release.outputs.releaseUploadUrl }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libpango1.0-dev libjavascriptcoregtk-4.0-dev libsoup2.4-dev libgdk-pixbuf2.0-dev libatk1.0-dev librust-gdk-sys-dev libgtk-3-dev webkit2gtk-4.0

      - name: install frontend dependencies
        run: |
          yarn cache clean
          yarn config delete proxy
          yarn config delete https-proxy
          yarn config delete registry
          yarn install --network-timeout 1000000 --frozen-lockfile

      - name: Build frontend
        run: yarn generate

      - uses: tauri-apps/tauri-action@v0
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

  publish-kanri-arm:
      needs: publish-kanri
      permissions:
        contents: write
      strategy:
        matrix:
          arch: [arm64, armv7]

      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        - uses: actions/setup-node@v4
          with:
            node-version: 20
        - name: Install dependencies
          run: yarn install
        - name: Build for ${{ matrix.arch }}
          run: yarn run init:${{matrix.arch}} && yarn run build:${{matrix.arch}}

        - name: Output Tauri release url
          run: echo ${{ needs.publish-kanri.outputs.upload_url }}

        - name: Upload Multiple Release Assets
          uses: NBTX/upload-release-assets@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ needs.publish-kanri.outputs.upload_url }}
            targets: ./src-tauri/target/*/release/bundle/deb/*.deb
